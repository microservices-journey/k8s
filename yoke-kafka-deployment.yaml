apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f /Users/tatsiana_marfel/Documents/learning/microservices-journey/yoke-docker/docker-compose.yml
    kompose.service.type: loadbalancer
    kompose.version: 1.22.0 (955b78124)
    kompose.image-pull-policy: Never
  creationTimestamp: null
  labels:
    io.kompose.service: yoke-kafka
  name: yoke-kafka
  namespace: yoke-network
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: yoke-kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f /Users/tatsiana_marfel/Documents/learning/microservices-journey/yoke-docker/docker-compose.yml
        kompose.service.type: loadbalancer
        kompose.version: 1.22.0 (955b78124)
        kompose.image-pull-policy: Never
      creationTimestamp: null
      labels:
        io.kompose.network/yoke-network: "true"
        io.kompose.service: yoke-kafka
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_HOST_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: status.podIP
            # - name: KAFKA_ADVERTISED_LISTENERS
            #   value: LISTENER_BOB://yoke-kafka:29092,LISTENER_FRED://localhost:9092
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            # - name: KAFKA_INTER_BROKER_LISTENER_NAME
            #   value: LISTENER_BOB
            # - name: KAFKA_LISTENERS
            #   value: LISTENER_BOB://yoke-kafka:29092,LISTENER_FRED://localhost:9092
            # - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            #   value: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          image: wurstmeister/kafka
          name: yoke-kafka
          ports:
            - containerPort: 9092
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
            - name: dockersock
              mountPath: "/var/run/docker.sock"
      hostname: yoke-kafka
      restartPolicy: Always
      volumes:     
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock 
status: {}
